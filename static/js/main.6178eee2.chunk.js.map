{"version":3,"sources":["index.js"],"names":["INTERESTS","ThanksPage","props","className","Form","state","loading","submitError","email","interest","isEmailInvalid","length","match","submitForm","setState","console","log","setTimeout","localStorage","setItem","onSubmit","updateEmail","event","target","value","updateInterest","this","type","placeholder","onChange","required","map","i","onClick","React","Component","Switch","showThanks","setShowThanks","isFormSubmitted","getItem","ReactDOM","render","document","querySelector"],"mappings":"gQAIMA,G,MAAY,CAChB,0CACA,cACA,UACA,YACA,UAGIC,EAAa,SAAAC,GAAK,OACtB,yBAAKC,UAAU,aACb,wBAAIA,UAAU,gBAAd,6BACA,uBAAGA,UAAU,cAAb,oKAQEC,E,4MACJC,MAAQ,CACNC,SAAS,EACTC,aAAa,EACbC,MAAO,GACPC,SAAU,I,EAGZC,eAAiB,WACf,OAC8B,IAA5B,EAAKL,MAAMG,MAAMG,SAChB,EAAKN,MAAMG,MAAMI,MAAM,qC,EAI5BC,WAAa,WACP,EAAKH,kBAAmD,IAA/B,EAAKL,MAAMI,SAASE,OAC/C,EAAKG,SAAS,CAAEP,aAAa,KAE7BQ,QAAQC,IACN,kBACA,EAAKX,MAAMG,MACX,aACA,EAAKH,MAAMI,UAEb,EAAKK,SAAS,CAAER,SAAS,IACzBW,YAAW,WACT,EAAKH,SAAS,CAAER,SAAS,IACzBY,aAAaC,QAAQ,YAAa,QAClC,EAAKjB,MAAMkB,aACV,O,EAIPC,YAAc,SAAAC,GACZ,IAAMd,EAAQc,EAAMC,OAAOC,MAC3B,EAAKV,SAAS,CAAEN,MAAOA,K,EAGzBiB,eAAiB,SAAAH,GACf,IAAMb,EAAWa,EAAMC,OAAOC,MAC9B,EAAKV,SAAS,CAAEL,SAAUA,K,uDAI1B,OACE,oCACE,yBAAKN,UAAU,SACb,gKAKF,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,6BACGuB,KAAKrB,MAAME,aAAemB,KAAKhB,iBAC9B,uBAAGP,UAAU,aAAb,oBAEA,GAEF,2BACEwB,KAAK,OACLxB,UAAS,sBACPuB,KAAKrB,MAAME,aAAemB,KAAKhB,iBAC3B,cACA,IAENkB,YAAY,sBACZC,SAAUH,KAAKL,eAGnB,6BACkC,IAA/BK,KAAKrB,MAAMI,SAASE,QAAgBe,KAAKrB,MAAME,YAC9C,uBAAGJ,UAAU,aAAb,0BAEA,GAEF,4BACEA,UAAU,WACV2B,UAAQ,EACRD,SAAUH,KAAKD,gBAEdzB,EAAU+B,KAAI,SAACtB,EAAUuB,GAAX,OACb,4BAAQR,MAAa,IAANQ,EAAUvB,EAAW,IAAKA,SAKjD,4BAAQwB,QAASP,KAAKb,YACnBa,KAAKrB,MAAMC,QAAU,gBAAkB,4B,GA1FjC4B,IAAMC,WAkGnBC,E,4MACJ/B,MAAQ,CAAEgC,YAAY,G,EAEtBC,cAAgB,WACd,EAAKxB,SAAS,CAAEuB,YAAY,K,EAG9BE,gBAAkB,WAChB,OACE,EAAKlC,MAAMgC,YAAoD,SAAtCnB,aAAasB,QAAQ,c,uDAKhD,OACE,yBAAKrC,UAAU,WACb,wBAAIA,UAAU,cAAd,0BACA,yBAAKA,UAAU,SACduB,KAAKa,kBACJ,kBAACtC,EAAD,MAEA,kBAACG,EAAD,CAAMgB,SAAUM,KAAKY,qB,GArBVJ,IAAMC,WA8B3BM,IAASC,OAAO,kBAACN,EAAD,MAAYO,SAASC,cAAc,Y","file":"static/js/main.6178eee2.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nconst INTERESTS = [\n  \"Your interests (value must be selected)\",\n  \"Development\",\n  \"Product\",\n  \"Marketing\",\n  \"Sales\"\n];\n\nconst ThanksPage = props => (\n  <div className=\"thanks-pg\">\n    <h2 className=\"thanks-title\">Thanks for your interest!</h2>\n    <p className=\"thanks-msg\">\n      We will review your application and contact you for additional information\n      should your background and experience meet the requirements of one of our\n      openings.\n    </p>\n  </div>\n);\n\nclass Form extends React.Component {\n  state = {\n    loading: false,\n    submitError: false,\n    email: \"\",\n    interest: \"\"\n  };\n\n  isEmailInvalid = () => {\n    return (\n      this.state.email.length === 0 ||\n      !this.state.email.match(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g)\n    );\n  };\n\n  submitForm = () => {\n    if (this.isEmailInvalid() || this.state.interest.length === 0) {\n      this.setState({ submitError: true });\n    } else {\n      console.log(\n        \"email address: \",\n        this.state.email,\n        \"interest: \",\n        this.state.interest\n      );\n      this.setState({ loading: true });\n      setTimeout(() => {\n        this.setState({ loading: false });\n        localStorage.setItem(\"submitted\", \"true\");\n        this.props.onSubmit();\n      }, 2000);\n    }\n  };\n\n  updateEmail = event => {\n    const email = event.target.value;\n    this.setState({ email: email });\n  };\n\n  updateInterest = event => {\n    const interest = event.target.value;\n    this.setState({ interest: interest });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"intro\">\n          <p>\n            Prepare for your career with a Project Management, Web-Development,\n            Graphic Design, or Digital Marketing Internship at Northern.\n          </p>\n        </div>\n        <div className=\"form\">\n          <div className=\"input-fields\">\n            <div>\n              {this.state.submitError && this.isEmailInvalid() ? (\n                <p className=\"error-msg\">Check your email</p>\n              ) : (\n                \"\"\n              )}\n              <input\n                type=\"text\"\n                className={`email-input ${\n                  this.state.submitError && this.isEmailInvalid()\n                    ? \"error-input\"\n                    : \"\"\n                }`}\n                placeholder=\"Your Email Address*\"\n                onChange={this.updateEmail}\n              />\n            </div>\n            <div>\n              {this.state.interest.length === 0 && this.state.submitError ? (\n                <p className=\"error-msg\">Value must be selected</p>\n              ) : (\n                \"\"\n              )}\n              <select\n                className=\"dropdown\"\n                required\n                onChange={this.updateInterest}\n              >\n                {INTERESTS.map((interest, i) => (\n                  <option value={i !== 0 ? interest : \"\"}>{interest}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <button onClick={this.submitForm}>\n            {this.state.loading ? \"Submitting...\" : \"Sign Up Now â–¸\"}\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nclass Switch extends React.Component {\n  state = { showThanks: false };\n\n  setShowThanks = () => {\n    this.setState({ showThanks: true });\n  };\n\n  isFormSubmitted = () => {\n    return (\n      this.state.showThanks || localStorage.getItem(\"submitted\") === \"true\"\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"main-pg\">\n        <h1 className=\"form-title\">INTERNSHIP SIGNUP FORM</h1>\n        <div className=\"line\"></div>\n        {this.isFormSubmitted() ? (\n          <ThanksPage />\n        ) : (\n          <Form onSubmit={this.setShowThanks} />\n        )}\n      </div>\n    );\n  }\n}\n\n//note to myself: line 100 - the option without a given value (index 0) - different css value (see dropdown: invalid)\n//this only works because we put \"required\", which means the value can't be empty\nReactDOM.render(<Switch />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}